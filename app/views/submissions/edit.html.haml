%textarea#text_sourcecode{style: "display:none"}~ @source
.container
  .row.mb-2
    .col-lg-8
      %h4 
        %span
          [#{@problem.name}]
        #{@problem.full_name}
      .row
        .col-md-6
          %em
            Limit: 
            #{@problem.live_dataset.time_limit}
            %span.text-body-tertiary>s
            ,
            %span= @problem.live_dataset.memory_limit
            %span.text-body-tertiary>MB
        .col-md-6.text-md-end
          = link_to_description_if_any "<span class='mi mi-bs md-18'>description</span> Read".html_safe, @problem, cxlass: 'badge text-bg-primary'
          - if @problem.attachment.attached?
            .d-md-none
            %span.d-none.d-md-inline
              |
            = link_to "<span class='mi mi-bs md-18'>archive</span> File".html_safe, get_attachment_problem_path(@problem)
          - if @problem.can_view_testcase
            %span
              |
            = link_to "<span class='mi mi-bs md-18'>bug_report</span> Testcases".html_safe, show_problem_testcases_path(@problem), class: ''
  .row
    .col-lg-8
      -# Coding area (or text display for Binary Type)
      %div
        - unless @as_binary
          %div.mb-3#editor{style: 'height: 500px; border-radius: 7px; font-size: 14px;'}
        - else
          - if @last_sub.present?
            %ul
              %li
                You have already submitted a file.
                = link_to 'Download', download_submission_path(@last_sub)
                the latest submission
              %li
                = link_to 'View', problem_submissions_path(@problem)
                all submissions for this problem.
          - else
            %ul
              %li You have not submitted any file to this problem.
      -# Form for submit & Language
      %div.mb-3
        .alert{class: (@as_binary ? 'alert-warning' : 'alert-info')}
          .mb-2
            - if @as_binary
              The problem only accept upload of an archive file. Select a file using the button
              %strong "Browse"
              and click submit.
            - else
              Write your code in the above box, choose a language, and click submit button when finished
          = form_with url: submit_main_path, :multipart => true, class: 'row row-cols-lg-auto g-3 align-items-center' do |form|
            = hidden_field_tag 'editor_text', @source
            = hidden_field_tag 'submission[problem_id]', @problem.id
            .col-auto
              = form.label :language_id, 'Language'
            .col-auto
              - options = options_from_collection_for_select(Language.where(id: @problem.get_permitted_lang_as_ids), 'id', 'pretty_name', @language.id )
              = form.select :language_id, options, {},  class: 'form-select', style: "width: 100px", id: 'language_id'
            .col-auto
              = form.file_field :file, class: 'form-control', id: 'load_file'
            .col-auto
              = submit_tag 'Submit', class: 'btn btn-success', id: 'live_submit', 
                data: {confirm: "Submitting this source code for task #{@problem.long_name}?"}

    .col-lg-4{ data: {turbo: true}}
      -# latest submission status
      .card.mb-3
        .card-header.text-bg-info.border-info
          Latest Submission Status
          = link_to "Refresh",get_latest_submission_status_submissions_path(@submission.user,@problem), id: 'refresh', class: "btn btn-light btn-sm", remote: true if @submission
        .card-body
          #latest_status
      -# Helper
      = turbo_frame_tag :problem_helpers, src: helpers_problem_path(@problem) do
        %p Loading...

:javascript
  $(document).ready(function() {

    var e = ace.edit("editor")
    e.setValue($("#text_sourcecode").val());
    e.gotoLine(1);
    $("#language_id").trigger('change');

    $("#load_file").on('change',function(evt) {
      var file = evt.target.files[0];
      var reader = new FileReader();
      reader.onload =  function(theFile) {
        var e = ace.edit("editor")
        e.setValue(theFile.target.result);
        e.gotoLine(1);
      };
      reader.readAsText(file)
    });

    $("#live_submit").on("click", function(event) {
      $("#editor_text").val(e.getValue());
    });

    $("#language_id").on("change", function(event) {
      text = $("#language_id option:selected").text();
      mode = 'ace/mode/c_cpp';
      switch (text) {
        case 'Pascal':
          mode = 'ace/mode/pascal';
          break;
        case 'C++':
        case 'C':
          mode = 'ace/mode/c_cpp';
          break;
        case 'Ruby':
          mode = 'ace/mode/ruby';
          break;
        case 'Python':
          mode = 'ace/mode/python';
          break;
        case 'Java':
          mode = 'ace/mode/java';
          break;
        case 'Rust':
          mode = 'ace/mode/rust';
          break;
        case 'Go':
          mode = 'ace/mode/golang';
          break;
        case 'PHP':
          mode = 'ace/mode/php';
          break;
        case 'Haskell':
          mode = 'ace/mode/haskell';
          break;
        case 'Verilog':
          mode = 'ace/mode/verilog';
          break;
      }
      e.getSession().setMode(mode);
    });

    $('#refresh').click()
    $('#language_id').change()

  });




